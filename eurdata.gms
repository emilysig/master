*This dataset describes the test exmple of the Nort-west European market.

sets
p producers /1*6/
n nodes /1*6/
t time stages /1*3/
m scenario tree nodes /1*10/
nm number of scenarios /1*6/
e types of energy natural gas as 1 and electricity as 2/1*2/
et(e) /2/
ef(e) /1/
d demand sectors /1/
;

alias
(p,pi)
(n,ni)
(t,ti)
(m,mi)
(e,ei)
;

scalars
k1  quadratic production cost coeff  /1 /
k2  linear production cost coeff     /0.2 /
k3  quad expansion cost coeff F     /1 /
k4  quad expansion cost coeff X     /1 /
k5  linear expansion cost coeff F     /0.2 /
k6  linear expansion cost coeff X     /0.2 /;

parameter
slp(m,n,d,e) slope of demand function;
slp(m,n,d,e) = 1;

parameters
dc(m) discount rate    /1  1, 2 0.9, 3 0.9, 4 0.9, 5 0.81, 6 0.81, 7 0.81, 8 0.81, 9 0.81, 10 0.81/
pb(m) probability of each scenario node /1  1, 2 0.333, 3 0.333, 4 0.333,5  0.1665,6  0.1665,7  0.1665,8  0.1665,9  0.1665,10  0.1665/;

table maxFlowV(n,n,e)        maximum flow on each arc
      1     2
1.2   0     0
1.3   1     0
1.4   1     0
1.5   0     1
1.6   1     0
5.2   0     0
5.4   1     0
5.6   1     0
;

table maxExXV(n,e)        maximum transformation output capacity expansions at each node at a time
   1     2
3  0     2
6  0     2
;

table maxExFV(n,n,e)        maximum transformation output capacity expansions at each node at a time
     1     2
1.2  2     2
1.6  2     0
5.2  2     0
;

table maxProdV(m,n,p,e)    maximum production capacity
         1     2
1.1.1    30    30
1.2.2    30    30
1.3.3    0     30
1.4.4    0     30
1.5.5    30    0
1.6.6    0     30
2.1.1    30    30
2.2.2    20    30
2.3.3    0     30
2.4.4    0     30
2.5.5    30    0
2.6.6    0     30
3.1.1    30    30
3.2.2    30    30
3.3.3    0     30
3.4.4    0     30
3.5.5    20    0
3.6.6    0     30
4.1.1    30    30
4.2.2    20    30
4.3.3    0     30
4.4.4    0     30
4.5.5    40    0
4.6.6    0     30
5.1.1    30    30
5.2.2    20    30
5.3.3    0     30
5.4.4    0     30
5.5.5    30    0
5.6.6    0     30
6.1.1    30    30
6.2.2    30    30
6.3.3    0     30
6.4.4    0     30
6.5.5    20    0
6.6.6    0     30
7.1.1    30    30
7.2.2    20    30
7.3.3    0     30
7.4.4    0     30
7.5.5    40    0
7.6.6    0     30
8.1.1    30    30
8.2.2    20    30
8.3.3    0     30
8.4.4    0     30
8.5.5    30    0
8.6.6    0     30
9.1.1    30    30
9.2.2    30    30
9.3.3    0     30
9.4.4    0     30
9.5.5    20    0
9.6.6    0     30
10.1.1   30    30
10.2.2   20    30
10.3.3   0     30
10.4.4   0     30
10.5.5   40    0
10.6.6   0     30
;


table int(m,n,d,e)     intercept in demand function
         1     2
1.1.1    10    10
1.2.1    10    10
1.3.1    10    10
1.4.1    10    10
1.5.1    10    10
1.6.1    10    10
2.1.1    10    10
2.2.1    10    10
2.3.1    10    10
2.4.1    10    10
2.5.1    10    10
2.6.1    10    10
3.1.1    10    10
3.2.1    10    10
3.3.1    10    10
3.4.1    10    10
3.5.1    10    10
3.6.1    10    10
4.1.1    10    10
4.2.1    10    10
4.3.1    10    10
4.4.1    10    10
4.5.1    10    10
4.6.1    10    10
5.1.1    10    10
5.2.1    10    10
5.3.1    10    10
5.4.1    10    10
5.5.1    10    10
5.6.1    10    10
6.1.1    10    10
6.2.1    10    10
6.3.1    10    10
6.4.1    10    10
6.5.1    10    10
6.6.1    10    9
7.1.1    10    10
7.2.1    10    10
7.3.1    10    10
7.4.1    10    10
7.5.1    10    10
7.6.1    10    9
8.1.1    10    10
8.2.1    10    10
8.3.1    10    10
8.4.1    10    10
8.5.1    10    10
8.6.1    10    11
9.1.1    10    10
9.2.1    10    10
9.3.1    10    10
9.4.1    10    10
9.5.1    10    10
9.6.1    10    11
10.1.1   10    10
10.2.1   10    10
10.3.1   10    10
10.4.1   10    10
10.5.1   10    10
10.6.1   10    11
;

*parameter
*l(m,n,e,e) ;
*l(m,n,e,e)=1;

set table l(m,n,e,e)
                               1          2
1.1.1                          1          1
1.1.2                          1          1
1.2.1                          1          1
1.2.2                          1          1
1.3.1                          1          0.4
1.3.2                          1          1
1.4.1                          1          1
1.4.2                          1          1
1.5.1                          1          1
1.5.2                          1          1
1.6.1                          1          0.4
1.6.2                          1          1
2.1.1                          1          1
2.1.2                          1          1
2.2.1                          1          1
2.2.2                          1          1
2.3.1                          1          0.4
2.3.2                          1          1
2.4.1                          1          1
2.4.2                          1          1
2.5.1                          1          1
2.5.2                          1          1
2.6.1                          1          0.4
2.6.2                          1          1
3.1.1                          1          1
3.1.2                          1          1
3.2.1                          1          1
3.2.2                          1          1
3.3.1                          1          0.4
3.3.2                          1          1
3.4.1                          1          1
3.4.2                          1          1
3.5.1                          1          1
3.5.2                          1          1
3.6.1                          1          0.4
3.6.2                          1          1
4.1.1                          1          1
4.1.2                          1          1
4.2.1                          1          1
4.2.2                          1          1
4.3.1                          1          0.4
4.3.2                          1          1
4.4.1                          1          1
4.4.2                          1          1
4.5.1                          1          1
4.5.2                          1          1
4.6.1                          1          0.4
4.6.2                          1          1
5.1.1                          1          1
5.1.2                          1          1
5.2.1                          1          1
5.2.2                          1          1
5.3.1                          1          0.4
5.3.2                          1          1
5.4.1                          1          1
5.4.2                          1          1
5.5.1                          1          1
5.5.2                          1          1
5.6.1                          1          0.4
5.6.2                          1          1
6.1.1                          1          1
6.1.2                          1          1
6.2.1                          1          1
6.2.2                          1          1
6.3.1                          1          0.4
6.3.2                          1          1
6.4.1                          1          1
6.4.2                          1          1
6.5.1                          1          1
6.5.2                          1          1
6.6.1                          1          0.4
6.6.2                          1          1
7.1.1                          1          1
7.1.2                          1          1
7.2.1                          1          1
7.2.2                          1          1
7.3.1                          1          0.4
7.3.2                          1          1
7.4.1                          1          1
7.4.2                          1          1
7.5.1                          1          1
7.5.2                          1          1
7.6.1                          1          0.4
7.6.2                          1          1
8.1.1                          1          1
8.1.2                          1          1
8.2.1                          1          1
8.2.2                          1          1
8.3.1                          1          0.4
8.3.2                          1          1
8.4.1                          1          1
8.4.2                          1          1
8.5.1                          1          1
8.5.2                          1          1
8.6.1                          1          0.4
8.6.2                          1          1
9.1.1                          1          1
9.1.2                          1          1
9.2.1                          1          1
9.2.2                          1          1
9.3.1                          1          0.4
9.3.2                          1          1
9.4.1                          1          1
9.4.2                          1          1
9.5.1                          1          1
9.5.2                          1          1
9.6.1                          1          0.4
9.6.2                          1          1
10.1.1                         1          1
10.1.2                         1          1
10.2.1                         1          1
10.2.2                         1          1
10.3.1                         1          0.4
10.3.2                         1          1
10.4.1                         1          1
10.4.2                         1          1
10.5.1                         1          1
10.5.2                         1          1
10.6.1                         1          0.4
10.6.2                         1          1
;

set table arcs(n,n)
    1    2    3    4     5    6
1   0    1    1    1     1    1
2   0    0    0    0     0    0
3   0    0    0    0     0    0
4   0    0    0    0     0    0
5   0    1    0    1     0    1
6   0    0    0    0     0    0
;


set spno(n,p);
spno(n,p)=1;

set table scenarios(nm,t)        tabele of scenarios
    1    2    3
1   1    2    5
2   1    2    6
3   1    3    7
4   1    3    8
5   1    4    9
6   1    5    10
;

set table ancestor(m,m)          table of ancestors to a scenario tree node
   1    2    3    4     5     6    7    8    9    10
1  0    0    0    0     0     0    0    0    0     0
2  1    0    0    0     0     0    0    0    0     0
3  1    0    0    0     0     0    0    0    0     0
4  1    0    0    0     0     0    0    0    0     0
5  1    1    0    0     0     0    0    0    0     0
6  1    1    0    0     0     0    0    0    0     0
7  1    0    1    0     0     0    0    0    0     0
8  1    0    1    0     0     0    0    0    0     0
9  1    0    0    1     0     0    0    0    0     0
10 1    0    0    1     0     0    0    0    0     0
;

*set table ancestor(m,m)          table of ancestors to a scenario tree node
*   1    2
*1  0    0
*2  1    0
*;



table maxTransV(n,e)
        1        2
1       0        0
2       0        0
3       0        0.1
4       0        0
5       0        0
6       0        0.1
;


